// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AutonomousCommand.h"
#include <iostream>
#include <math.h>

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AutonomousCommand::AutonomousCommand(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain.get());
	mPosition = 0.0;
	mVelocity = 0.0;
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void AutonomousCommand::Initialize() {
	Robot::driveTrain->SetVelocityMode();
	Robot::driveTrain->SetChassisVelocity(mVelocity);
}

// Called repeatedly when this Command is scheduled to run
void AutonomousCommand::Execute() {

	std::cout << "Executing\n";
}

// Make this return true when this Command no longer needs to run execute()
bool AutonomousCommand::IsFinished() {
//	if (fabs(Robot::driveTrain->ReadPositionError()) < 0.35)
//	{
//		return true;
//	}
//	else
//	{
//		return false;
//	}
	return true;
}

// Called once after isFinished returns true
void AutonomousCommand::End() {

}

AutonomousCommand::AutonomousCommand(double Velocity) {
	Requires(Robot::driveTrain.get());
	mVelocity = Velocity;
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousCommand::Interrupted() {

}
