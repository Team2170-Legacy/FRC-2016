// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef DRIVE_TRAIN_H
#define DRIVE_TRAIN_H
#include "Commands/Subsystem.h"
#include "WPILib.h"

#define DEADBAND(val, limit)	((fabs(val) < limit) ? 0.0 : val)

/**
 *
 *
 * @author ExampleAuthor
 */
class DriveTrain: public Subsystem {
private:

	float mAutoVelocity = 0.5;
	float mYawGain = -0.2;
	bool bDriveStraight = false;

	double AxisPower(double axis, double exponent);

	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<CANTalon> cANTalonRight;
	std::shared_ptr<CANTalon> cANTalonLeft;
	std::shared_ptr<RobotDrive> robotDrive;
	std::shared_ptr<AnalogGyro> gyro;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	DriveTrain();

	void InitDefaultCommand();
	void ArcadeDriveWithJoysticks(float moveVal, float rotateVal);
	void TankDriveWithTriggers(float Left, float Right, float Trigger);
	void DriveStraight(bool Backwards = false);
	void DriveStraight(float magnitude);

	void ResetChassisYaw();
	float ReadChassisYaw();
	void StopMotors();

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	void setAutoVelocity(float autoVelocity = 0.5) {
		mAutoVelocity = autoVelocity;
	}

	void IntializeMotorDrives();

};

#endif
